groups:
- name: test
  jobs:
  - detect-new-versions
  - create-base-infra
  - deploy-director
  - run-perf-tests-postgres
  - run-perf-tests-mysql
  - teardown
- name: manual-teardown
  jobs:
  - manual-teardown-cf-only
  - manual-teardown-bbl-only
  - manual-teardown-base-infra-only
  - manual-teardown-all

anchors:
  alert_failure: &alert_failure
    on_failure:
      put: slack-notification
      params:
        alert_type: failed
  delete_cf: &delete_cf
    task: bosh-delete-deployments
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    params:
      BBL_STATE_DIR: state
      DELETE_ALL_DEPLOYMENTS: true
      IGNORE_ERRORS: true
  bbl_destroy: &bbl_destroy
    task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      BBL_STATE_DIR: state
      BBL_AWS_ACCESS_KEY_ID: ((.:base-infra.bbl_aws_creds.aws_access_key_id))
      BBL_AWS_SECRET_ACCESS_KEY: ((.:base-infra.bbl_aws_creds.aws_secret_access_key))
      BBL_AWS_REGION: ((region))
      STORE_BBL_STATE_AS_TARBALL: true
      TF_VAR_parent_zone_id: ((parent_zone_id))
      TF_VAR_elb_idle_timeout: ((cf_router_idle_timeout_secs))
    ensure:
      put: bbl-state
      attempts: 3
      params:
        file: updated-bbl-state/bbl-state.tgz
  destroy_base_infra: &destroy_base_infra
    put: base-infra
    params:
      action: destroy
      terraform_source: cf-performance-tests-pipeline/base-infra/terraform
    get_params:
      action: destroy
  destroy_director_and_base_infra: &destroy_director_and_base_infra
    do: [*bbl_destroy, *destroy_base_infra]
  destroy_all: &destroy_all
    do: [*delete_cf, *destroy_director_and_base_infra]
  system_domain: &system_domain cf.perf-test-((cloud_controller_type))((test_suffix)).((parent_zone_domain))

resource_types:
- name: slack-alert
  type: docker-image
  source:
    repository: arbourd/concourse-slack-alert-resource
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: latest

resources:
  - name: cf-deployment-concourse-tasks
    type: git
    icon: github
    source:
      uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git
      tag_filter: 'v16.1.0'
  - name: cf-performance-tests-pipeline
    type: git
    icon: github
    source:
      uri: https://github.com/cloudfoundry/cf-performance-tests-pipeline.git
      username: ((cf-perf-github-username))
      password: ((cf-perf-github-user-token))
      branch: ((results-branch))
      ignore_paths: [results/**]
  - name: results
    type: git
    icon: github
    source:
      uri: https://github.com/cloudfoundry/cf-performance-tests-pipeline.git
      username: ((cf-perf-github-username))
      password: ((cf-perf-github-user-token))
      branch: ((results-branch))

  - name: bbl-state
    type: s3
    icon: aws
    source:
      region_name: ((region))
      bucket: ((state-bucket-name))
      versioned_file: ((cloud_controller_type))((test_suffix))/bbl-state.tar.gz
      initial_version: "0"
      access_key_id: ((aws-pipeline-user-id))
      secret_access_key: ((aws-pipeline-user-secret))
  - name: cf-deployment
    type: git
    icon: github
    source:
      uri: https://github.com/cloudfoundry/cf-deployment.git
      tag_filter: v*
  - name: cf-performance-tests
    type: git
    icon: github
    source:
      uri: https://github.com/cloudfoundry/cf-performance-tests.git
      branch: main
  - name: slack-notification
    type: slack-alert
    source:
      url: ((cf-perf-slack-notification-url))
  - name: concourse-tasks
    type: git
    icon: github
    source:
      uri: https://github.com/EngineerBetter/concourse-tasks.git
      tag_regex: '[0-9]+\.[0-9]+\.[0-9]+'
  - name: base-infra
    type: terraform
    icon: terraform
    source:
      env_name: terraform
      backend_type: s3
      backend_config:
        bucket: ((state-bucket-name))
        workspace_key_prefix: ((cloud_controller_type))((test_suffix))
        key: base-infra.tfstate
        region: ((region))
        access_key: ((aws-pipeline-user-id))
        secret_key: ((aws-pipeline-user-secret))
      env:
        AWS_ACCESS_KEY_ID: ((aws-pipeline-user-id))
        AWS_SECRET_ACCESS_KEY: ((aws-pipeline-user-secret))
        AWS_DEFAULT_REGION: ((region))
      vars:
        test_environment: ((cloud_controller_type))((test_suffix))
        system_domain: *system_domain
        region: ((region))

jobs:
  - name: detect-new-versions
    serial: true
    # <<: *alert_failure
    plan:
      - get: cf-performance-tests-pipeline
        trigger: true
      - get: cf-deployment
        trigger: true
      - set_pipeline: self
        file: cf-performance-tests-pipeline/ci/pipeline.yml
        var_files:
          - cf-performance-tests-pipeline/variables/((cloud_controller_type))((test_suffix)).yml
          - cf-performance-tests-pipeline/variables/common.yml

  - name: create-base-infra
    serial: true
    serial_groups: [deploy-test-destroy]
    # <<: *alert_failure
    plan:
      - get: cf-performance-tests-pipeline
        trigger: true
        passed: [detect-new-versions]
      - get: cf-deployment
        trigger: true
        passed: [detect-new-versions]
      - put: base-infra
        params:
          terraform_source: cf-performance-tests-pipeline/base-infra/terraform

  - name: deploy-director
    serial: true
    serial_groups: [deploy-test-destroy]
    <<: *alert_failure
    plan:
      - in_parallel:
        - get: cf-performance-tests-pipeline
          trigger: true
          passed: [create-base-infra]
        - get: cf-deployment
          trigger: true
          passed: [create-base-infra]
        - get: cf-deployment-concourse-tasks
        - get: bbl-state
          params:
            unpack: true
        - get: base-infra
      - load_var: base-infra
        file: base-infra/metadata
        format: json
      - task: bbl-up
        file: cf-deployment-concourse-tasks/bbl-up/task.yml
        input_mapping:
          bbl-config: cf-performance-tests-pipeline
        params:
          BBL_IAAS: aws
          BBL_ENV_NAME: perf-test-((cloud_controller_type))((test_suffix))
          BBL_AWS_ACCESS_KEY_ID: ((.:base-infra.bbl_aws_creds.aws_access_key_id))
          BBL_AWS_SECRET_ACCESS_KEY: ((.:base-infra.bbl_aws_creds.aws_secret_access_key))
          BBL_AWS_REGION: ((region))
          BBL_STATE_DIR: state
          BBL_CONFIG_DIR: bbl-patches
          BBL_LB_CERT: ((.:base-infra.cert_pem))
          BBL_LB_KEY: ((.:base-infra.private_key))
          LB_DOMAIN: *system_domain
          SKIP_LB_CREATION: false
          STORE_BBL_STATE_AS_TARBALL: true
          TF_VAR_parent_zone_id: ((parent_zone_id))
          TF_VAR_elb_idle_timeout: ((cf_router_idle_timeout_secs))
        ensure:
          put: bbl-state
          attempts: 3
          params:
            file: updated-bbl-state/bbl-state.tgz

  - name: run-perf-tests-postgres
    serial: true
    serial_groups: [deploy-test-destroy]
    <<: *alert_failure
    plan:
      - in_parallel:
        - get: cf-performance-tests-pipeline
          trigger: true
          passed: [deploy-director]
        - get: cf-deployment
          trigger: true
          passed: [deploy-director]
        - get: cf-deployment-concourse-tasks
        - get: bbl-state
          params:
            unpack: true
          passed: [deploy-director]
        - get: base-infra
        - get: concourse-tasks
        - get: cf-performance-tests
      - load_var: base-infra
        file: base-infra/metadata
        format: json
      - in_parallel:
        - task: combine-ops-file-directories
          file: concourse-tasks/combine-directories/task.yml
          input_mapping:
            src-1: cf-deployment
            src-2: cf-performance-tests-pipeline
          params:
            SRC_1_GLOB: operations/*.yml
            SRC_2_GLOB: operations/*.yml
          output_mapping:
            target: combined-ops-files
        - task: write-bosh-vars-file
          file: cf-performance-tests-pipeline/ci/tasks/write-bosh-vars-file/task.yml
          params:
            VARS:
              aws_region: ((region))
              blobstore_access_key_id: ((.:base-infra.cloud_controller_aws_creds.aws_access_key_id))
              blobstore_secret_access_key: ((.:base-infra.cloud_controller_aws_creds.aws_secret_access_key))
              app_package_directory_key: ((.:base-infra.packages_bucket_name))
              buildpack_directory_key: ((.:base-infra.buildpacks_bucket_name))
              droplet_directory_key: ((.:base-infra.droplets_bucket_name))
              resource_directory_key: ((.:base-infra.resources_bucket_name))
        - load_var: cf-deployment-version
          file: cf-deployment/.git/short_ref
          format: trim
      - task: deploy-cf
        file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
        input_mapping:
          ops-files: combined-ops-files
          vars-files: cf-vars-file
        params:
          BBL_STATE_DIR: state
          MANIFEST_FILE: cf-deployment.yml
          SYSTEM_DOMAIN: *system_domain
          VARS_FILES: cf-vars.yml
          OPS_FILES: "operations/use-postgres.yml operations/use-compiled-releases.yml((additional-ops-files)) operations/scale-up-vms.yml operations/use-external-blobstore.yml operations/use-s3-blobstore.yml"
      - task: bosh-clean-up
        file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
        params:
          BBL_STATE_DIR: state
      - task: run-performance-tests
        file: cf-performance-tests-pipeline/ci/tasks/run-performance-tests/task.yml
        params:
          BBL_STATE_DIR: state
          GIT_COMMIT_EMAIL: ((cf-perf-github-user-email))
          GIT_COMMIT_USERNAME: ((cf-perf-github-username))
          GIT_COMMIT_MESSAGE: Results for cf-deployment ((.:cf-deployment-version)), ((cloud_controller_type)) cc with postgres ccdb
          CCDB: postgres
          CLOUD_CONTROLLER_TYPE: ((cloud_controller_type))
          TEST_SUITE_FOLDER: ((test-suite-folder))
      - put: results
        params:
          repository: cf-performance-tests-pipeline
          rebase: true

  - name: run-perf-tests-mysql
    serial: true
    serial_groups: [deploy-test-destroy]
    <<: *alert_failure
    plan:
      - in_parallel:
        - get: cf-performance-tests-pipeline
          trigger: true
          passed: [run-perf-tests-postgres]
        - get: cf-deployment
          trigger: true
          passed: [run-perf-tests-postgres]
        - get: cf-deployment-concourse-tasks
        - get: bbl-state
          params:
            unpack: true
          passed: [run-perf-tests-postgres]
        - get: base-infra
        - get: concourse-tasks
        - get: cf-performance-tests
      - load_var: base-infra
        file: base-infra/metadata
        format: json
      - in_parallel:
        - task: combine-ops-file-directories
          file: concourse-tasks/combine-directories/task.yml
          input_mapping:
            src-1: cf-deployment
            src-2: cf-performance-tests-pipeline
          params:
            SRC_1_GLOB: operations/*.yml
            SRC_2_GLOB: operations/*.yml
          output_mapping:
            target: combined-ops-files
        - task: write-bosh-vars-file
          file: cf-performance-tests-pipeline/ci/tasks/write-bosh-vars-file/task.yml
          params:
            VARS:
              aws_region: ((region))
              blobstore_access_key_id: ((.:base-infra.cloud_controller_aws_creds.aws_access_key_id))
              blobstore_secret_access_key: ((.:base-infra.cloud_controller_aws_creds.aws_secret_access_key))
              app_package_directory_key: ((.:base-infra.packages_bucket_name))
              buildpack_directory_key: ((.:base-infra.buildpacks_bucket_name))
              droplet_directory_key: ((.:base-infra.droplets_bucket_name))
              resource_directory_key: ((.:base-infra.resources_bucket_name))
        - load_var: cf-deployment-version
          file: cf-deployment/.git/short_ref
          format: trim
      - task: deploy-cf
        file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
        input_mapping:
          ops-files: combined-ops-files
          vars-files: cf-vars-file
        params:
          BBL_STATE_DIR: state
          MANIFEST_FILE: cf-deployment.yml
          SYSTEM_DOMAIN: *system_domain
          VARS_FILES: cf-vars.yml
          OPS_FILES: "operations/use-compiled-releases.yml((additional-ops-files)) operations/scale-up-vms.yml operations/use-external-blobstore.yml operations/use-s3-blobstore.yml"
      - task: bosh-clean-up
        file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
        params:
          BBL_STATE_DIR: state
      - task: run-performance-tests
        file: cf-performance-tests-pipeline/ci/tasks/run-performance-tests/task.yml
        timeout: 2h30m
        params:
          BBL_STATE_DIR: state
          GIT_COMMIT_EMAIL: ((cf-perf-github-user-email))
          GIT_COMMIT_USERNAME: ((cf-perf-github-username))
          GIT_COMMIT_MESSAGE: Results for cf-deployment ((.:cf-deployment-version)), ((cloud_controller_type)) cc with mysql ccdb
          CCDB: mysql
          CLOUD_CONTROLLER_TYPE: ((cloud_controller_type))
          TEST_SUITE_FOLDER: ((test-suite-folder))
      - put: results
        params:
          repository: cf-performance-tests-pipeline
          rebase: true

  - name: teardown
    serial: true
    serial_groups: [deploy-test-destroy]
    <<: *alert_failure
    plan:
      - in_parallel:
        - get: cf-performance-tests-pipeline
          trigger: true
          passed: [run-perf-tests-mysql]
        - get: cf-deployment
          trigger: true
          passed: [run-perf-tests-mysql]
        - get: cf-deployment-concourse-tasks
        - get: bbl-state
          params:
            unpack: true
        - get: base-infra
      - load_var: base-infra
        file: base-infra/metadata
        format: json
      - *destroy_all

  - name: manual-teardown-cf-only
    serial: true
    serial_groups: [deploy-test-destroy]
    plan:
    - in_parallel:
      - get: cf-deployment-concourse-tasks
      - get: bbl-state
        params:
          unpack: true
    - *delete_cf

  - name: manual-teardown-bbl-only
    serial: true
    serial_groups: [deploy-test-destroy]
    plan:
    - in_parallel:
      - get: cf-deployment-concourse-tasks
      - get: bbl-state
        params:
          unpack: true
      - get: base-infra
    - load_var: base-infra
      file: base-infra/metadata
      format: json
    - *bbl_destroy

  - name: manual-teardown-base-infra-only
    serial: true
    serial_groups: [deploy-test-destroy]
    plan:
    - get: cf-performance-tests-pipeline
    - *destroy_base_infra

  - name: manual-teardown-all
    serial: true
    serial_groups: [deploy-test-destroy]
    plan:
    - in_parallel:
      - get: cf-performance-tests-pipeline
      - get: cf-deployment-concourse-tasks
      - get: bbl-state
        params:
          unpack: true
      - get: base-infra
    - load_var: base-infra
      file: base-infra/metadata
      format: json
    - *destroy_all
